[{"D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\store\\action\\index.js":"1","D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\config\\firebase.js":"2","D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\index.js":"3","D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\store\\reducer\\index.js":"4","D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\containers\\Home\\index.js":"5","D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\reportWebVitals.js":"6","D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\App.js":"7","D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\config\\router.js":"8","D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\containers\\Chat\\index.js":"9"},{"size":1670,"mtime":1606942147140,"results":"10","hashOfConfig":"11"},{"size":534,"mtime":1606917366888,"results":"12","hashOfConfig":"11"},{"size":612,"mtime":1606917243956,"results":"13","hashOfConfig":"11"},{"size":508,"mtime":1606941223466,"results":"14","hashOfConfig":"11"},{"size":1160,"mtime":1607249270198,"results":"15","hashOfConfig":"11"},{"size":362,"mtime":1606676502237,"results":"16","hashOfConfig":"11"},{"size":187,"mtime":1606926233565,"results":"17","hashOfConfig":"11"},{"size":512,"mtime":1606926330426,"results":"18","hashOfConfig":"11"},{"size":5755,"mtime":1607280547033,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15nm3i5",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\store\\action\\index.js",["41","42","43"],"D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\config\\firebase.js",[],"D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\index.js",[],"D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\store\\reducer\\index.js",["44"],"D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\containers\\Home\\index.js",["45","46"],"import React from \"react\";\r\nimport './style.css';\r\nimport { connect } from \"react-redux\";\r\nimport { setData, facebook_login } from \"../../store/action\";\r\nimport logo from '../../assets/logo.jpg'\r\nimport './../../config/firebase'\r\nclass Home extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"Props ==> \", props);\r\n    return {};\r\n  }\r\n\r\n  render() {\r\n    let user = {\r\n      name: \"Tehseen Jawed\",\r\n      email: \"mtehseen@gmail.com\",\r\n    };\r\n    console.log(this.props.history)\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n            <img width=\"200px\" src={logo}/>\r\n        </div>\r\n            <div className=\"subcontainer\">\r\n        <button className=\"button\" onClick={() => this.props.facebook_login(this.props.history)}>Login With FaceBook</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  set_data: (data) => dispatch(setData(data)),\r\n  facebook_login: (data) => dispatch(facebook_login(data)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\reportWebVitals.js",[],"D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\App.js",["47"],"import logo from './logo.svg';\nimport './App.css';\nimport AppRoute from './config/router'\n\nfunction App() {\n  return (\n    <div>\n      <AppRoute />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\config\\router.js",["48"],"D:\\desktop\\Web and mobile app development\\React\\Practices\\chatapp\\src\\containers\\Chat\\index.js",["49","50","51","52","53","54","55"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './style.css';\r\nimport {getMembersfromFirebase} from '../../store/action'\r\nimport firebase from '../../config/firebase';\r\n\r\n\r\nclass Chat extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            chat_user: {},\r\n            chats:[],\r\n            message:\"\",\r\n            sendTo:{}\r\n        }\r\n    }\r\n\r\n    get_message =(uid) =>{\r\n        firebase.database().ref('/').child(`chats/${uid}`).on('child_added',(newdata)=>{\r\n            console.log(\"It is new data\",newdata.val())\r\n            this.state.chats.push(newdata.val())\r\n            this.setState({\r\n                chats:this.state.chats,\r\n            })\r\n        }) \r\n        \r\n    }\r\n    setToChat =(data)=> {\r\n        this.get_message(this.chatID())\r\n        this.setState({\r\n            chat_user : data,\r\n        })\r\n        console.log(\"====>\",this.state.chats)\r\n        \r\n        // this.state.chats.push(this.state.message)\r\n    }\r\n\r\n    \r\n    chatID = () =>{\r\n        const chatUser = this.state.chat_user.uid;\r\n        const user = this.props.current_user.uid;\r\n        if(chatUser < user){\r\n            return chatUser + user\r\n        }\r\n        else{\r\n            return user + chatUser\r\n        }\r\n\r\n    }\r\n    \r\n    sendMesage = () => {\r\n        // let chatUID = this.chatID();\r\n        const user = this.props.current_user;\r\n        firebase.database().ref(`/`).child(`chats/${this.chatID()}`).push({\r\n            message:this.state.message,\r\n            name:user.name,\r\n            uid:user.uid\r\n        })\r\n        this.setState({\r\n            // chats:this.state.chats,\r\n            message:\"\"\r\n        })\r\n        // this.state.message = \"\"\r\n    }\r\n    componentDidMount(){\r\n        this.props.getMembersfromFirebase()\r\n        \r\n        \r\n    }\r\n    render(){\r\n        const {email, name, profile, uid} = this.state.chat_user\r\n        let user = this.props.current_user;\r\n        // console.log(\"It is Dispatch Work sir \",this.props.users)\r\n        // console.log(\"It is new one sir \",this.props.users)\r\n        // console.log(this.state.chat_user)\r\n        return(\r\n            <div>\r\n                <div className=\"Header\">\r\n                    <img className=\"profileImage\" src={user.profile} alt=\"img\"/>\r\n                    <span className=\"profileName\">{user.name}<br/> </span>\r\n                    <span className=\"headerDots\">ProChat.</span>\r\n                </div>\r\n                <div className=\"connectMenu\">\r\n                    <div className=\"menuTitle\"><p>Friends</p></div>\r\n                    {this.props.users.map((data,index)=>{\r\n                        if(user.name != data.name){ \r\n                            this.state.sendTo = data\r\n                          return <a onClick={() => this.setToChat(data)}> <div className=\"friendBar\" key={index}>\r\n                            <img className=\"friendPic\" src={data.profile} alt=\"img\" />\r\n                            <span className=\"friendProfile\">{data.name}<br/> </span>\r\n                        </div></a>\r\n                    \r\n                        }\r\n                    })}\r\n                    \r\n                </div>\r\n                {Object.keys(this.state.chat_user).length ?\r\n                <div className=\"chatBox\">\r\n                    <div className=\"chatHeader\">\r\n                    <img className=\"friendPic\" src={profile} alt=\"img\" />\r\n                    <span className=\"profileName boxHeader\">{name}</span>\r\n                </div>\r\n                    <div className=\"chatBody\">\r\n                        {Object.keys(this.state.chats).length ? \r\n                            \r\n                        <div>\r\n                            {this.state.chats.map((v,i)=>{\r\n                                console.log(\"New data here ==>>\",this.state.sendTo);\r\n                                if(v.uid != user.uid){\r\n                                    return <div className=\"messages\" key={i}>\r\n                                    <img className=\"friendPic mesgPic\" src={this.state.sendTo.profile} alt=\"img\" />\r\n                                    <span className=\"profileName mesg\">{v.message}<br/> </span>\r\n                                </div>\r\n                                }\r\n                                else{\r\n                                    return <div className=\"messageRecieve\" key={i}>\r\n                                    <span className=\"profileName mesg Picres\">{v.message}<br/> </span>\r\n                                    <img className=\"friendPic mesgPic Picres\" src={user.profile} alt=\"img\" />\r\n                                </div>\r\n                                }\r\n                            })}\r\n                        </div>\r\n                        :\r\n                        <div style={{color:'gray', fontSize:20, padding:'1%'}}>No Messages Found</div>    \r\n                    }\r\n                        <input value={this.state.message} onChange={(e)=> this.setState({message : e.target.value})} className=\"msgBox\" type=\"text\" placeholder=\"Send Message\"/>\r\n                        <button className=\"messageBtn\" onClick={() => this.sendMesage()}><i class=\"fas fa-paper-plane\"></i></button>\r\n                    </div>\r\n                </div>\r\n                    \r\n                    :\r\n                    <h3>No State Updated</h3>\r\n                }\r\n                    \r\n                \r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps= (state) =>({\r\n    current_user: state.current_user,\r\n    users: state.users\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getMembersfromFirebase:() => dispatch(getMembersfromFirebase())\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);",{"ruleId":"56","severity":1,"message":"57","line":20,"column":13,"nodeType":"58","messageId":"59","endLine":20,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":28,"column":13,"nodeType":"58","messageId":"59","endLine":28,"endColumn":25},{"ruleId":"56","severity":1,"message":"61","line":41,"column":13,"nodeType":"58","messageId":"59","endLine":41,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":5,"column":1,"nodeType":"64","endLine":25,"endColumn":2},{"ruleId":"56","severity":1,"message":"65","line":14,"column":9,"nodeType":"58","messageId":"59","endLine":14,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":22,"column":13,"nodeType":"68","endLine":22,"endColumn":44},{"ruleId":"56","severity":1,"message":"69","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"70","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":23},{"ruleId":"56","severity":1,"message":"71","line":72,"column":16,"nodeType":"58","messageId":"59","endLine":72,"endColumn":21},{"ruleId":"56","severity":1,"message":"72","line":72,"column":38,"nodeType":"58","messageId":"59","endLine":72,"endColumn":41},{"ruleId":"73","severity":1,"message":"74","line":86,"column":55,"nodeType":"75","messageId":"76","endLine":86,"endColumn":57},{"ruleId":"77","severity":1,"message":"78","line":87,"column":38,"nodeType":"79","messageId":"80","endLine":87,"endColumn":40},{"ruleId":"81","severity":1,"message":"82","line":88,"column":29,"nodeType":"83","endLine":88,"endColumn":39},{"ruleId":"84","severity":1,"message":"85","line":89,"column":34,"nodeType":"68","endLine":89,"endColumn":74},{"ruleId":"77","severity":1,"message":"78","line":110,"column":42,"nodeType":"79","messageId":"80","endLine":110,"endColumn":44},"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'customerName' is assigned a value but never used.","'errorCode' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logo' is defined but never used.","'BrowserRouter' is defined but never used.","'email' is assigned a value but never used.","'uid' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]